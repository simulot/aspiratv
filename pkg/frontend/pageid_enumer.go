// Code generated by "enumer -type=PageID -json"; DO NOT EDIT.

//
package frontend

import (
	"encoding/json"
	"fmt"
)

const _PageIDName = "PageUndefinedPageSearchOnLinePageLibraryPageSubscriptionsPageEditSubscritionPageSettingsPageCredits"

var _PageIDIndex = [...]uint8{0, 13, 29, 40, 57, 76, 88, 99}

func (i PageID) String() string {
	if i < 0 || i >= PageID(len(_PageIDIndex)-1) {
		return fmt.Sprintf("PageID(%d)", i)
	}
	return _PageIDName[_PageIDIndex[i]:_PageIDIndex[i+1]]
}

var _PageIDValues = []PageID{0, 1, 2, 3, 4, 5, 6}

var _PageIDNameToValueMap = map[string]PageID{
	_PageIDName[0:13]:  0,
	_PageIDName[13:29]: 1,
	_PageIDName[29:40]: 2,
	_PageIDName[40:57]: 3,
	_PageIDName[57:76]: 4,
	_PageIDName[76:88]: 5,
	_PageIDName[88:99]: 6,
}

// PageIDString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PageIDString(s string) (PageID, error) {
	if val, ok := _PageIDNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PageID values", s)
}

// PageIDValues returns all values of the enum
func PageIDValues() []PageID {
	return _PageIDValues
}

// IsAPageID returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PageID) IsAPageID() bool {
	for _, v := range _PageIDValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for PageID
func (i PageID) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for PageID
func (i *PageID) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("PageID should be a string, got %s", data)
	}

	var err error
	*i, err = PageIDString(s)
	return err
}
